@using ControleDeContatos.Enums
@model UsuarioModel
@{
	ViewData["Title"] = "Criar Usuario";
}

<div class="text-center">

	<h1 class="display-4">Cadastrar Usuario</h1>

</div>

<form asp-controller = "Usuario" asp-action = "Criar" method = "post">

	<div class="form-group"> 
		<label for="exampleInputEmail1">Nome</label>
		<input type="text" asp-for="Nome" class="form-control" placeholder="Digite o nome do usuário">
		@Html.ValidationMessageFor(x => x.Nome)
	</div>

	<br />

	<div class="form-group">
		<label for="exampleInputEmail1">E-mail</label>
		<input type="text" asp-for="Email" class="form-control" placeholder="Digite o email do usuário">
		@Html.ValidationMessageFor(x => x.Email)
	</div>

	<br />

	<div class="form-group">
		<label for="exampleInputEmail1">Login</label>
		<input type="text" asp-for="Login" class="form-control" placeholder="Digite o login do usuário">
		@Html.ValidationMessageFor(x => x.Login)
	</div>

	<br />

	<div class="form-group">
		<label for="exampleInputEmail1">Perfil</label>
		<select asp-for="Perfil" class="form-control">
			<option value="0">Selecione</option>
			<option value="@PerfilEnum.Admin">Administrador</option>
			<option value="@PerfilEnum.Padrao">Padrão</option>
		</select>
	</div>

	<br />

	<div class="form-group">
		<label for="exampleInputEmail1">Senha</label>
		<input type="password" asp-for="Senha" class="form-control" placeholder="Digite a senha do usuário">
		@Html.ValidationMessageFor(x => x.Senha)
	</div>

	<br />
	
	<div class="d-grid gap-2">
		<button type="submit" class="btn btn-primary">Cadastrar</button>
		<a class="btn btn-secondary" role="button" asp-controller="Usuario" asp-action="Index">Voltar</a>
	</div>
</form>
